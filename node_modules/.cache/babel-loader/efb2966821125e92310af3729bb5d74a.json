{"ast":null,"code":"var _jsxFileName = \"E:\\\\My_portfolio_projects\\\\react\\\\todo-list-final\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './styling.scss';\nimport reportWebVitals from './reportWebVitals';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [tasks, addTask] = useState(\"\");\nconst displayTasks = [...tasks];\n\nfunction TodoList() {\n  function Adding() {\n    /* const myResult = (\n      <div>\n        <input type=\"text\" className='result-input' value={tasks} />\n      </div>\n    ); \n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(myResult); */\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0412\\u0410\\u0428 \\u041F\\u0415\\u0420\\u0415\\u041B\\u0406\\u041A \\u0417\\u0410\\u0412\\u0414\\u0410\\u041D\\u042C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"main-input\",\n      value: tasks,\n      onChange: e => addTask(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: Adding,\n      children: \"\\u0414\\u041E\\u0414\\u0410\\u0422\\u0418\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks\",\n      children: displayTasks.map((task, index) => {\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_c = TodoList;\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 43,\n  columnNumber: 3\n}, this)); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","useEffect","ReactDOM","reportWebVitals","tasks","addTask","displayTasks","TodoList","Adding","e","target","value","map","task","index","root","createRoot","document","getElementById","render"],"sources":["E:/My_portfolio_projects/react/todo-list-final/src/index.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport './styling.scss';\nimport reportWebVitals from './reportWebVitals';\n\nconst [tasks, addTask] = useState(\"\");\nconst displayTasks = [...tasks];\nfunction TodoList() {\n  \n  function Adding() {\n    \n    \n    \n    /* const myResult = (\n      <div>\n        <input type=\"text\" className='result-input' value={tasks} />\n      </div>\n    ); \n    const root = ReactDOM.createRoot(document.getElementById('root'));\n    root.render(myResult); */ \n  }\n  \n   \n\n  return (\n    <div className=\"List\">\n      <h1>ВАШ ПЕРЕЛІК ЗАВДАНЬ</h1>\n      <input type=\"text\" className='main-input' value={tasks} onChange={(e) => addTask(e.target.value)} />\n      <button onClick={(Adding)}>ДОДАТИ</button>\n      <br />\n      <br />\n      <div className='tasks'>\n        {displayTasks.map((task, index) => {\n          return <p key={index}>{task}</p>;\n          })}\n      </div>\n    </div>\n  );\n}\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <TodoList />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAO,aAAP;AACA,OAAO,gBAAP;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;AAEA,MAAM,CAACC,KAAD,EAAQC,OAAR,IAAmBL,QAAQ,CAAC,EAAD,CAAjC;AACA,MAAMM,YAAY,GAAG,CAAC,GAAGF,KAAJ,CAArB;;AACA,SAASG,QAAT,GAAoB;EAElB,SAASC,MAAT,GAAkB;IAIhB;AACJ;AACA;AACA;AACA;AACA;AACA;EACG;;EAID,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,IAAI,EAAC,MAAZ;MAAmB,SAAS,EAAC,YAA7B;MAA0C,KAAK,EAAEJ,KAAjD;MAAwD,QAAQ,EAAGK,CAAD,IAAOJ,OAAO,CAACI,CAAC,CAACC,MAAF,CAASC,KAAV;IAAhF;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAQ,OAAO,EAAGH,MAAlB;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eAIE;MAAA;MAAA;MAAA;IAAA,QAJF,eAKE;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MAAK,SAAS,EAAC,OAAf;MAAA,UACGF,YAAY,CAACM,GAAb,CAAiB,CAACC,IAAD,EAAOC,KAAP,KAAiB;QACjC,oBAAO;UAAA,UAAgBD;QAAhB,GAAQC,KAAR;UAAA;UAAA;UAAA;QAAA,QAAP;MACC,CAFF;IADH;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;KA/BQP,Q;AAgCT,MAAMQ,IAAI,GAAGb,QAAQ,CAACc,UAAT,CAAoBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB,CAAb;AACAH,IAAI,CAACI,MAAL,eACE,QAAC,KAAD,CAAO,UAAP;EAAA,uBACE,QAAC,QAAD;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF,E,CAMA;AACA;AACA;;AACAhB,eAAe"},"metadata":{},"sourceType":"module"}